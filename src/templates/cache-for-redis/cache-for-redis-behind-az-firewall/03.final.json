{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.31.34.60546",
      "templateHash": "6104582345186721950"
    }
  },
  "parameters": {
    "Location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]"
    },
    "CacheName": {
      "type": "string"
    },
    "FirewallDnsLabel": {
      "type": "string"
    },
    "SpokeIPRange": {
      "type": "string",
      "defaultValue": "10.0.0.0/24"
    },
    "HubIPRange": {
      "type": "string",
      "defaultValue": "10.0.1.0/24"
    }
  },
  "variables": {
    "tags": {
      "LabCreatedBy": "Michael Lopez",
      "LabCreatedOn": "2022-01-15",
      "LabUpdatedOn": "2024-11-21",
      "LabVersion": "2.0",
      "LabCategory": "Cache for Redis"
    },
    "environmentName": "[environment().name]",
    "isAzureGovernment": "[equals(variables('environmentName'), 'AzureUSGovernment')]",
    "isAzureChinaCloud": "[equals(variables('environmentName'), 'AzureChinaCloud')]",
    "serviceBusSuffix": "[if(variables('isAzureGovernment'), 'servicebus.usgovcloudapi.net', if(variables('isAzureChinaCloud'), 'servicebus.chinacloudapi.cn', 'servicebus.windows.net'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2024-03-01",
      "name": "[format('{0}-fw-ip', parameters('CacheName'))]",
      "location": "[parameters('Location')]",
      "sku": {
        "name": "Standard",
        "tier": "Regional"
      },
      "tags": "[variables('tags')]",
      "properties": {
        "deleteOption": "Delete",
        "dnsSettings": {
          "domainNameLabel": "[parameters('FirewallDnsLabel')]"
        },
        "idleTimeoutInMinutes": 10,
        "publicIPAddressVersion": "IPv4",
        "publicIPAllocationMethod": "Static"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2021-06-01",
      "name": "[format('{0}-logs', parameters('CacheName'))]",
      "location": "[parameters('Location')]",
      "tags": "[variables('tags')]",
      "properties": {
        "publicNetworkAccessForIngestion": "Enabled",
        "publicNetworkAccessForQuery": "Enabled",
        "retentionInDays": 30,
        "sku": {
          "name": "PerGB2018"
        }
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2024-03-01",
      "name": "[format('{0}-nsg', parameters('CacheName'))]",
      "location": "[parameters('Location')]",
      "tags": "[variables('tags')]",
      "properties": {}
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2024-03-01",
      "name": "[format('{0}-spoke-vnet', parameters('CacheName'))]",
      "location": "[parameters('Location')]",
      "tags": "[variables('tags')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('SpokeIPRange')]"
          ]
        },
        "subnets": [
          {
            "name": "default",
            "properties": {
              "addressPrefix": "[parameters('SpokeIPRange')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}-nsg', parameters('CacheName')))]"
              }
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}-nsg', parameters('CacheName')))]"
      ]
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2024-03-01",
      "name": "[format('{0}-hub-vnet', parameters('CacheName'))]",
      "location": "[parameters('Location')]",
      "tags": "[variables('tags')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('HubIPRange')]"
          ]
        },
        "subnets": [
          {
            "name": "AzureFirewallSubnet",
            "properties": {
              "addressPrefix": "[parameters('HubIPRange')]"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
      "apiVersion": "2024-03-01",
      "name": "[format('{0}/{1}', format('{0}-hub-vnet', parameters('CacheName')), 'hub-to-spoke-peering')]",
      "properties": {
        "allowVirtualNetworkAccess": true,
        "allowForwardedTraffic": true,
        "remoteVirtualNetwork": {
          "id": "[resourceId('Microsoft.Network/virtualNetworks', format('{0}-spoke-vnet', parameters('CacheName')))]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', format('{0}-hub-vnet', parameters('CacheName')))]",
        "[resourceId('Microsoft.Network/virtualNetworks', format('{0}-spoke-vnet', parameters('CacheName')))]"
      ]
    },
    {
      "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
      "apiVersion": "2024-03-01",
      "name": "[format('{0}/{1}', format('{0}-spoke-vnet', parameters('CacheName')), 'spoke-to-hub-peering')]",
      "properties": {
        "allowVirtualNetworkAccess": true,
        "allowForwardedTraffic": true,
        "remoteVirtualNetwork": {
          "id": "[resourceId('Microsoft.Network/virtualNetworks', format('{0}-hub-vnet', parameters('CacheName')))]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', format('{0}-hub-vnet', parameters('CacheName')))]",
        "[resourceId('Microsoft.Network/virtualNetworks', format('{0}-spoke-vnet', parameters('CacheName')))]"
      ]
    },
    {
      "type": "Microsoft.Network/firewallPolicies",
      "apiVersion": "2024-03-01",
      "name": "[format('{0}-fwpolicy', parameters('CacheName'))]",
      "tags": "[variables('tags')]",
      "location": "[parameters('Location')]",
      "properties": {
        "sku": {
          "tier": "Standard"
        }
      }
    },
    {
      "type": "Microsoft.Network/firewallPolicies/ruleCollectionGroups",
      "apiVersion": "2021-03-01",
      "name": "[format('{0}/{1}', format('{0}-fwpolicy', parameters('CacheName')), 'forced-app-rule')]",
      "properties": {
        "priority": 1002,
        "ruleCollections": [
          {
            "ruleCollectionType": "FirewallPolicyFilterRuleCollection",
            "action": {
              "type": "Allow"
            },
            "name": "forced-app-rule",
            "priority": 1003,
            "rules": [
              {
                "ruleType": "ApplicationRule",
                "description": "This rule is to force application rule evaluation logic",
                "name": "ForcedAppRule",
                "protocols": [
                  {
                    "port": 443,
                    "protocolType": "Https"
                  },
                  {
                    "port": 80,
                    "protocolType": "Http"
                  }
                ],
                "sourceAddresses": [
                  "[parameters('SpokeIPRange')]"
                ],
                "targetFqdns": [
                  "www.github.com"
                ]
              }
            ]
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/firewallPolicies', format('{0}-fwpolicy', parameters('CacheName')))]"
      ]
    },
    {
      "type": "Microsoft.Network/firewallPolicies/ruleCollectionGroups",
      "apiVersion": "2021-03-01",
      "name": "[format('{0}/{1}', format('{0}-fwpolicy', parameters('CacheName')), 'redis-collection-groups')]",
      "properties": {
        "priority": 1000,
        "ruleCollections": [
          {
            "ruleCollectionType": "FirewallPolicyFilterRuleCollection",
            "action": {
              "type": "Allow"
            },
            "name": "redis-deployment-network-rules",
            "priority": 1001,
            "rules": [
              {
                "ruleType": "NetworkRule",
                "name": "allow-deployment-dependencies-tcp",
                "description": "Allow Cache for Redis dependencies for successful deployment",
                "ipProtocols": [
                  "TCP"
                ],
                "sourceAddresses": [
                  "[parameters('SpokeIPRange')]"
                ],
                "destinationAddresses": [
                  "AzureCloud"
                ],
                "destinationPorts": [
                  "1688"
                ]
              },
              {
                "ruleType": "NetworkRule",
                "name": "allow-deployment-dependencies-udp",
                "description": "Allow Cache for Redis dependencies for successful deployment",
                "ipProtocols": [
                  "UDP"
                ],
                "sourceAddresses": [
                  "[parameters('SpokeIPRange')]"
                ],
                "destinationAddresses": [
                  "AzureCloud"
                ],
                "destinationPorts": [
                  "123"
                ]
              }
            ]
          },
          {
            "ruleCollectionType": "FirewallPolicyFilterRuleCollection",
            "action": {
              "type": "Allow"
            },
            "name": "redis-deployment-application-rules",
            "priority": 1002,
            "rules": [
              {
                "ruleType": "ApplicationRule",
                "name": "allow-deployment-dependencies-https",
                "description": "Allow Cache for Redis dependencies for successful deployment",
                "protocols": [
                  {
                    "port": 443,
                    "protocolType": "Https"
                  }
                ],
                "sourceAddresses": [
                  "[parameters('SpokeIPRange')]"
                ],
                "terminateTLS": false,
                "targetFqdns": [
                  "www.microsoft.com",
                  "go.microsoft.com",
                  "[format('*.blob.{0}', environment().suffixes.storage)]",
                  "settings-win.data.microsoft.com",
                  "*.update.microsoft.com",
                  "*.events.data.microsoft.com",
                  "[format('*{0}', environment().suffixes.keyvaultDns)]",
                  "[format('*.queue.{0}', environment().suffixes.storage)]",
                  "[format('gcs.prod.monitoring.{0}', environment().suffixes.storage)]",
                  "[format('*.prod.warm.ingest.monitor.{0}', environment().suffixes.storage)]",
                  "definitionupdates.microsoft.com",
                  "validation-v2.sls.microsoft.com",
                  "wdcp.microsoft.com",
                  "wdcpalt.microsoft.com",
                  "[format('*.table.{0}', environment().suffixes.storage)]"
                ]
              },
              {
                "ruleType": "ApplicationRule",
                "name": "allow-deployment-dependencies-http",
                "description": "Allow Cache for Redis dependencies for successful deployment",
                "protocols": [
                  {
                    "port": 80,
                    "protocolType": "Http"
                  }
                ],
                "sourceAddresses": [
                  "[parameters('SpokeIPRange')]"
                ],
                "terminateTLS": false,
                "targetFqdns": [
                  "www.msftconnecttest.com",
                  "ctldl.windowsupdate.com",
                  "crl.microsoft.com"
                ]
              }
            ]
          },
          {
            "ruleCollectionType": "FirewallPolicyFilterRuleCollection",
            "action": {
              "type": "Allow"
            },
            "name": "redis-runtime-network-rules",
            "priority": 1003,
            "rules": [
              {
                "ruleType": "NetworkRule",
                "name": "allow-runtime-dependencies-tcp",
                "description": "Allow Cache for Redis dependencies for successful deployment",
                "ipProtocols": [
                  "TCP"
                ],
                "sourceAddresses": [
                  "[parameters('SpokeIPRange')]"
                ],
                "destinationAddresses": [
                  "AzureMonitor"
                ],
                "destinationPorts": [
                  "12000"
                ]
              }
            ]
          },
          {
            "ruleCollectionType": "FirewallPolicyFilterRuleCollection",
            "action": {
              "type": "Allow"
            },
            "name": "redis-runtime-application-rules",
            "priority": 1004,
            "rules": [
              {
                "ruleType": "ApplicationRule",
                "name": "allow-deployment-dependencies-https",
                "description": "Allow Cache for Redis dependencies for successful runtime",
                "protocols": [
                  {
                    "port": 443,
                    "protocolType": "Https"
                  }
                ],
                "sourceAddresses": [
                  "[parameters('SpokeIPRange')]"
                ],
                "terminateTLS": false,
                "targetFqdns": [
                  "shavamanifestcdnprod1.azureedge.net",
                  "shavamanifestazurecdnprod1.azureedge.net",
                  "global.prod.microsoftmetrics.com",
                  "*.delivery.mp.microsoft.com",
                  "[format('*.table.{0}', environment().suffixes.storage)]",
                  "[format('azurewatsonanalysis-prod.{0}', environment().suffixes.storage)]",
                  "[format('*.{0}', variables('serviceBusSuffix'))]",
                  "azredis-black.prod.microsoftmetrics.com",
                  "azredis-red.prod.microsoftmetrics.com",
                  "azredis.prod.microsoftmetrics.com",
                  "shoebox3.prod.microsoftmetrics.com",
                  "shoebox3-red.prod.microsoftmetrics.com",
                  "shoebox3-black.prod.microsoftmetrics.com"
                ]
              },
              {
                "ruleType": "ApplicationRule",
                "name": "allow-deployment-dependencies-http",
                "description": "Allow Cache for Redis dependencies for successful runtime",
                "protocols": [
                  {
                    "port": 80,
                    "protocolType": "Http"
                  }
                ],
                "sourceAddresses": [
                  "[parameters('SpokeIPRange')]"
                ],
                "terminateTLS": false,
                "targetFqdns": [
                  "cacerts.digicert.com",
                  "cacerts.digicert.cn",
                  "cacerts.geotrust.com",
                  "www.microsoft.com",
                  "crl3.digicert.com",
                  "crl4.digicert.com",
                  "crl.digicert.cn",
                  "cdp.geotrust.com",
                  "ocsp.digicert.com",
                  "ocsp.digicert.cn",
                  "oneocsp.microsoft.com",
                  "status.geotrust.com",
                  "crl.microsoft.com",
                  "mscrl.microsoft.com"
                ]
              }
            ]
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/firewallPolicies', format('{0}-fwpolicy', parameters('CacheName')))]",
        "[resourceId('Microsoft.Network/firewallPolicies/ruleCollectionGroups', format('{0}-fwpolicy', parameters('CacheName')), 'forced-app-rule')]"
      ]
    },
    {
      "type": "Microsoft.Network/azureFirewalls",
      "apiVersion": "2024-03-01",
      "name": "[format('{0}-fw', parameters('CacheName'))]",
      "location": "[parameters('Location')]",
      "tags": "[variables('tags')]",
      "properties": {
        "firewallPolicy": {
          "id": "[resourceId('Microsoft.Network/firewallPolicies', format('{0}-fwpolicy', parameters('CacheName')))]"
        },
        "sku": {
          "name": "AZFW_VNet",
          "tier": "Standard"
        },
        "ipConfigurations": [
          {
            "name": "fw-public-ip",
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}-fw-ip', parameters('CacheName')))]"
              },
              "subnet": {
                "id": "[format('{0}/subnets/AzureFirewallSubnet', resourceId('Microsoft.Network/virtualNetworks', format('{0}-hub-vnet', parameters('CacheName'))))]"
              }
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/firewallPolicies', format('{0}-fwpolicy', parameters('CacheName')))]",
        "[resourceId('Microsoft.Network/virtualNetworks', format('{0}-hub-vnet', parameters('CacheName')))]",
        "[resourceId('Microsoft.Network/firewallPolicies/ruleCollectionGroups', format('{0}-fwpolicy', parameters('CacheName')), 'forced-app-rule')]",
        "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}-fw-ip', parameters('CacheName')))]",
        "[resourceId('Microsoft.Network/firewallPolicies/ruleCollectionGroups', format('{0}-fwpolicy', parameters('CacheName')), 'redis-collection-groups')]"
      ]
    },
    {
      "type": "Microsoft.Insights/diagnosticSettings",
      "apiVersion": "2021-05-01-preview",
      "scope": "[format('Microsoft.Network/azureFirewalls/{0}', format('{0}-fw', parameters('CacheName')))]",
      "name": "default",
      "properties": {
        "workspaceId": "[resourceId('Microsoft.OperationalInsights/workspaces', format('{0}-logs', parameters('CacheName')))]",
        "logAnalyticsDestinationType": "Dedicated",
        "metrics": [
          {
            "category": "AllMetrics",
            "enabled": true,
            "retentionPolicy": {
              "days": 0,
              "enabled": false
            }
          }
        ],
        "logs": [
          {
            "categoryGroup": "AllLogs",
            "enabled": true,
            "retentionPolicy": {
              "days": 0,
              "enabled": false
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/azureFirewalls', format('{0}-fw', parameters('CacheName')))]",
        "[resourceId('Microsoft.OperationalInsights/workspaces', format('{0}-logs', parameters('CacheName')))]"
      ]
    },
    {
      "type": "Microsoft.Network/routeTables",
      "apiVersion": "2024-03-01",
      "name": "[format('{0}-rt', parameters('CacheName'))]",
      "location": "[resourceGroup().location]",
      "tags": "[variables('tags')]",
      "properties": {
        "disableBgpRoutePropagation": false,
        "routes": [
          {
            "name": "forced-tunnel",
            "properties": {
              "addressPrefix": "0.0.0.0/0",
              "nextHopType": "VirtualAppliance",
              "nextHopIpAddress": "[reference(resourceId('Microsoft.Network/azureFirewalls', format('{0}-fw', parameters('CacheName'))), '2024-03-01').ipConfigurations[0].properties.privateIPAddress]"
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/azureFirewalls', format('{0}-fw', parameters('CacheName')))]"
      ]
    },
    {
      "type": "Microsoft.Network/virtualNetworks/subnets",
      "apiVersion": "2021-03-01",
      "name": "[format('{0}/{1}', format('{0}-spoke-vnet', parameters('CacheName')), 'default')]",
      "properties": {
        "addressPrefix": "[parameters('SpokeIPRange')]",
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}-nsg', parameters('CacheName')))]"
        },
        "routeTable": {
          "id": "[resourceId('Microsoft.Network/routeTables', format('{0}-rt', parameters('CacheName')))]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}-nsg', parameters('CacheName')))]",
        "[resourceId('Microsoft.Network/virtualNetworks', format('{0}-spoke-vnet', parameters('CacheName')))]",
        "[resourceId('Microsoft.Network/routeTables', format('{0}-rt', parameters('CacheName')))]"
      ]
    },
    {
      "type": "Microsoft.Cache/redis",
      "apiVersion": "2024-11-01",
      "name": "[toLower(parameters('CacheName'))]",
      "location": "[parameters('Location')]",
      "tags": "[variables('tags')]",
      "properties": {
        "sku": {
          "capacity": 1,
          "family": "P",
          "name": "Premium"
        },
        "enableNonSslPort": true,
        "minimumTlsVersion": "1.2",
        "publicNetworkAccess": "Enabled",
        "redisVersion": "6",
        "subnetId": "[resourceId('Microsoft.Network/virtualNetworks/subnets', format('{0}-spoke-vnet', parameters('CacheName')), 'default')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/azureFirewalls', format('{0}-fw', parameters('CacheName')))]",
        "[extensionResourceId(resourceId('Microsoft.Network/azureFirewalls', format('{0}-fw', parameters('CacheName'))), 'Microsoft.Insights/diagnosticSettings', 'default')]",
        "[resourceId('Microsoft.Network/firewallPolicies/ruleCollectionGroups', format('{0}-fwpolicy', parameters('CacheName')), 'forced-app-rule')]",
        "[resourceId('Microsoft.Network/firewallPolicies/ruleCollectionGroups', format('{0}-fwpolicy', parameters('CacheName')), 'redis-collection-groups')]",
        "[resourceId('Microsoft.Network/routeTables', format('{0}-rt', parameters('CacheName')))]",
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', format('{0}-spoke-vnet', parameters('CacheName')), 'default')]"
      ]
    }
  ],
  "outputs": {
    "DataExplorerCluster": {
      "type": "string",
      "value": "[resourceId('Microsoft.OperationalInsights/workspaces', format('{0}-logs', parameters('CacheName')))]"
    }
  }
}